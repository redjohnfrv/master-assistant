import React, {useEffect} from 'react'import styled from 'styled-components'import {useTimer} from 'react-timer-hook'import {fromNumber} from '../../utils/fromNumber'import {SvgPause, SvgPlay} from '../../assets/images/svgComponents'import {SvgRepeat} from '../../assets/images/svgComponents/SvgRepeat'type Props = {  expiryTimestamp: number}export const Timer = (props: Props) => {  const {expiryTimestamp} = props  const time = new Date()  time.setSeconds(time.getSeconds() + expiryTimestamp)  const {    seconds,    minutes,    hours,    start,    pause,    restart,  } = useTimer({expiryTimestamp: time})  useEffect(() => {    restart(time)    // eslint-disable-next-line react-hooks/exhaustive-deps  }, [expiryTimestamp])  return (    <Root>      <Counter>        <span>{fromNumber.getDoubleZeroTime(hours)} :</span>        <span>{fromNumber.getDoubleZeroTime(minutes)} :</span>        <span>{fromNumber.getDoubleZeroTime(seconds)}</span>      </Counter>      <Panel>        <ButtonWrapper>          <button onClick={start}/>          <StyledSvgPlay/>        </ButtonWrapper>        <ButtonWrapper>          <button onClick={pause}/>          <StyledSvgPause/>        </ButtonWrapper>        <ButtonWrapper>          <button onClick={() => {            restart(time)          }}/>          <StyledSvgRepeat/>        </ButtonWrapper>      </Panel>    </Root>  )}const Root = styled.section`  width: 100%;  & div > button {    position: relative;    padding: 0;    background: none;    border: none;    cursor: pointer;    width: 100%;    height: 100%;    z-index: 1;  }`const Counter = styled.div`  display: flex;  justify-content: center;  align-items: center;  gap: 8px;  margin-bottom: 16px;  width: 100%;  color: #FFF;  ${({theme: {typography}}) => typography.bold32};`const Panel = styled.nav`  display: flex;  justify-content: center;  gap: 24px;  width: 100%;`const ButtonWrapper = styled.div`  position: relative;  width: 35px;  height: 35px;  border-radius: 8px;  border: 2px solid #FFF;  cursor: pointer;  background: ${({theme: {colors}}) => colors.primary[300]};  & svg {    position: absolute;    top: 50%;    left: 50%;    transform: translate(-50%, -50%);    width: 20px;    height: 20px;    & path {      fill: #FFF;    }  }  &:hover {    background: ${({theme: {colors}}) => colors.primary[200]};  }`const StyledSvgPause = styled(SvgPause)``const StyledSvgPlay = styled(SvgPlay)``const StyledSvgRepeat = styled(SvgRepeat)``